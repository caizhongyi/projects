<?php
/**
 * Created by JetBrains PhpStorm.
 * User: hongmingjie
 * Date: 14-1-8
 * Time: 上午9:58
 * 投票模块
 */

defined('IN_IA') or exit('Access Denied');

class VoteModuleSite extends WeModuleSite {

    public function doMobileList() {
        global $_GPC, $_W;
        $from_user = authcode(base64_decode($_GPC['from_user']), 'DECODE');
        //判断用户是否存在
        $rid = $_GPC['id'];
        //获取粉丝投票信息
        $fans_info = pdo_fetch("SELECT * FROM " . tablename('vote_fans') . "where rid=" . $rid." and from_user ='".$from_user."'" );
        //获取投票信息
        $reply_info = pdo_fetch("SELECT * FROM " . tablename('vote_reply') . " WHERE `rid`=:rid LIMIT 1", array(':rid' => $rid));
        if( $_GPC['action']=='vote'){
            sleep(1);//防止连续点击照成的多投票
            if(empty($from_user)){
                echo json_encode(array('errno'=>-1,'error'=>'非法用户，不允许投票！!'));
                die();
            }
            // 判断是否有投票的权限，服务器判断
            $can_vote = $this->can_vote($fans_info,$reply_info['interval']);
            if(!$can_vote){
                echo json_encode(array('errno'=>-1,'error'=>'您已投过票了！'));
                die();
            }
            //判断投票时间是否过期
            if(!empty($reply_info)&&$reply_info['start_time']<time()&&$reply_info['end_time']>time()){
                $is_expired = false;//过期
            }else{
                $is_expired = true;//没过期
            }
            if($is_expired){
                echo json_encode(array('errno'=>-1,'error'=>'投票活动已经结束！'));
                die();
            }
            $select_type = in_array($reply_info['vote_type'],array(0,2))? 'radio' :'checkbox';
            $option_arr = explode(',',$_GPC['option']);
            if(empty($option_arr)){
                echo json_encode(array('errno'=>-7,'error'=>"请选择选项！".$reply_info['maxitem']."票！"));
                die();
            }
            if($reply_info['maxitem']>0 && count($option_arr)>$reply_info['maxitem'] && $select_type=='checkbox'){
                echo json_encode(array('errno'=>-6,'error'=>"最多只允许投".$reply_info['maxitem']."票！"));
                die();
            }
            $fans_info_data = array(
                'from_user'=>$from_user,
                'rid'=>$rid,
                'option'=>$_GPC['option'],
                'vote_time'=>time(),
            );
            //更新粉丝投票表
            if($fans_info==false){
                $fans_info_data['vote_num']=1;
                if(!pdo_insert('vote_fans',$fans_info_data)){
                    echo json_encode(array('errno'=>-2,'error'=>'您已投过票了！'));
                    die();
                }
                //插入的粉丝投票id
                $vfid = pdo_insertid();
            }else{
                $fans_info_data['vote_num']= $fans_info['vote_num']+1;
                if(!pdo_update('vote_fans',$fans_info_data,array('id'=>$fans_info['id']))){
                    echo json_encode(array('errno'=>-3,'error'=>'您已投过票了！'));
                    die();
                }
                $vfid = $fans_info['id'];
            }
            //更新粉丝投票选项表
            $res = pdo_query("update ".tablename('vote_option')." set vote_num =vote_num+1 where rid =".$rid." and id in(".$_GPC['option'].")");
            if($res==false){
                echo json_encode(array('errno'=>-4,'error'=>'您已投过票了！'));
                die();
            }
            $logs_info_data = array(
                'rid'=>$rid,
                'vfid'=>$vfid,
                'from_user'=>$from_user,
                'option'=>$_GPC['option'],
                'vote_time'=>time(),
            );
            //记录日志
            if(!pdo_insert('vote_logs',$logs_info_data)){
                echo json_encode(array('errno'=>-5,'error'=>'您已投过票了！'));
                die();
            }
            echo json_encode(array('errno'=>200));
        }else{
            //总投票记录信息
            $vote_logs_infos = pdo_fetchall("SELECT * FROM ".tablename('vote_logs')." WHERE rid=" . $rid );
            //个人总投票记录信息
            $user_vote_logs_infos = pdo_fetchall("SELECT * FROM ".tablename('vote_logs')." WHERE rid=" . $rid . " and from_user='" . $from_user . "'");
            //总投票数
            $vote_counts = count($vote_logs_infos);
            //获取投票选项
            $vote_option_infos = pdo_fetchall("SELECT * FROM ".tablename('vote_option')." WHERE rid=" . $rid );

            //TODO 判断是否可以投票
            $can_vote = $this->can_vote($fans_info,$reply_info['interval']);
            //判断投票时间是否过期
            if(!empty($reply_info)&&$reply_info['start_time']<time()&&$reply_info['end_time']>time()){
                $is_expired = false;//过期
            }else{
                $is_expired = true;//没过期
            }
            // 判断单选还是多选
            $select_type = in_array($reply_info['vote_type'],array(0,2))? 'radio' :'checkbox';
            // 判断图文还是文本
            $is_text =  in_array($reply_info['vote_type'],array(0,1))? true :false;
            $vote_url=$this->createMobileUrl('list',  array('action'=>'vote','name' => 'vote', 'id'=>$rid, 'from_user' => $_GPC['from_user']));
            if($is_text){
                //文本模版
                include $this->template('text');
            }else{
                //图文模版
                include $this->template('image');
            }
        }
    }
    /*
     * 判断是否可以投票
     * $data 投票信息
     */
    function can_vote($data,$interval){
        if(empty($data)){
            return true;//没有投票记录
        }elseif($interval==0){
            return false;//一个粉丝允许投一次
        }else{
            $res = (time() - $data['vote_time'])/(24*3600)> $interval ? true	: false;
            return $res;
        }
    }
}